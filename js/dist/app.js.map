{"version":3,"sources":["../src/app.js"],"names":[],"mappings":"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","file":"app.js","sourcesContent":["class Game {\n  constructor() {\n    // Game Data\n    this.players = [1, 2];\n    this.ties = this.getScore('ties');\n    this.player1Score = this.getScore(this.players[0]);\n    this.player2Score = this.getScore(this.players[1]);\n    this.gamesPlayed = (this.player1Score + this.player2Score + this.ties);\n    this.turn = this.players[this.gamesPlayed % 2]; // Used to alternate who goes first\n    this.turns = 0;\n    this.board = // ToDo update to support dynamic board size\n    [[0, 0, 0],\n     [0, 0, 0],\n     [0, 0, 0]];\n\n    // HTML elements\n    this.player1ScoreDiv = document.getElementById('p1-score');\n    this.player2ScoreDiv = document.getElementById('p2-score');\n    this.tiesScoreDiv = document.getElementById('ties-score');\n    this.boardDiv = document.getElementById('board');\n    this.squares = Array.prototype.slice.call(this.boardDiv.querySelectorAll('.square'));\n\n    this.start();\n  }\n\n  start() {\n    this.setScoreboard();\n    this.initEvents();\n  }\n\n  initEvents() {\n    const that = this;\n\n    this.squares.forEach((el) => {\n      el.addEventListener('click', function squareClick() {\n        that.checkSelection(this);\n      });\n    });\n  }\n\n  checkSelection(square) {\n    const activeSquare = square;\n\n    if (!activeSquare.classList.contains('active')) {\n      activeSquare.className += ` active player${this.turn}`;\n      this.turns++;\n      this.board[square.dataset.row][square.dataset.col] = this.turn;\n\n      this.checkForWinner();\n      this.turn = this.players[(this.gamesPlayed + this.turns) % 2];\n    }\n  }\n\n  setScoreboard() {\n    this.player1ScoreDiv.innerHTML = this.player1Score;\n    this.player2ScoreDiv.innerHTML = this.player2Score;\n    this.tiesScoreDiv.innerHTML = this.ties;\n  }\n\n  addWin(player) {\n    this.updateScore(player, (this.getScore(player) + 1));\n  }\n\n  checkForWinner() {\n    if (this.turns < 5) {\n      return; // No possible for winner yet\n    }\n\n      // Check for Horizonal winner\n    for (let i = 0; i < 3; i++) {\n      if (this.board[i][0] === this.turn &&\n            this.board[i][1] === this.turn &&\n            this.board[i][2] === this.turn) {\n        this.gameOver(this.turn);\n        return;\n      }\n    }\n\n      // Check for Vertical winner\n    for (let i = 0; i < 3; i++) {\n      if (this.board[0][i] === this.turn &&\n            this.board[1][i] === this.turn &&\n            this.board[2][i] === this.turn) {\n        this.gameOver(this.turn);\n        return;\n      }\n    }\n\n      // Check for Diagonal Winner\n    if (this.board[0][0] === this.turn &&\n            this.board[1][1] === this.turn &&\n            this.board[2][2] === this.turn) {\n      this.gameOver(this.turn);\n      return;\n    }\n\n      // Check for Reverse Diagonal Winner\n    if (this.board[2][0] === this.turn &&\n            this.board[1][1] === this.turn &&\n            this.board[0][2] === this.turn) {\n      this.gameOver(this.turn);\n      return;\n    }\n\n    if (this.turns === 9) {\n      this.gameOver('ties');\n    }\n  }\n\n  reset() {\n    this.setScoreboard();\n\n    this.squares.forEach((el) => {\n      this.removeClasses(el, ['active', 'player1', 'player2']);\n    });\n\n    this.turns = 0;\n    this.board = // ToDo update to support dynamic board size\n    [[0, 0, 0],\n     [0, 0, 0],\n     [0, 0, 0]];\n  }\n\n  gameOver(player) {\n    alert('Game Over');\n    this.addWin(player);\n    this.reset();\n  }\n\n  getScore(player) {\n    let playerKey = player;\n    playerKey = `player${player}`;// update for readable localStorage value\n    if (localStorage.getItem(playerKey) === null) {\n      localStorage.setItem(playerKey, 0);\n    }\n    return parseInt(localStorage.getItem(playerKey), 10);\n  }\n\n  updateScore(player, score) {\n    let playerKey = player;\n    playerKey = `player${player}`; // update for readable localStorage value\n    localStorage.setItem(playerKey, score);\n    this.syncScores();\n  }\n\n  syncScores() {\n    this.player1Score = this.getScore(this.players[0]);\n    this.player2Score = this.getScore(this.players[1]);\n    this.ties = this.getScore('ties');\n  }\n\n  removeClasses(el, classes) {\n    for (let i = classes.length; i--;) {\n      el.classList.remove(classes[i]);\n    }\n  }\n};\n"]}